;;;
;;; Copyright (c) 2003,2004 uim Project http://uim.freedesktop.org/
;;;
;;; All rights reserved.
;;;
;;; Redistribution and use in source and binary forms, with or without
;;; modification, are permitted provided that the following conditions
;;; are met:
;;; 1. Redistributions of source code must retain the above copyright
;;;    notice, this list of conditions and the following disclaimer.
;;; 2. Redistributions in binary form must reproduce the above copyright
;;;    notice, this list of conditions and the following disclaimer in the
;;;    documentation and/or other materials provided with the distribution.
;;; 3. Neither the name of authors nor the names of its contributors
;;;    may be used to endorse or promote products derived from this software
;;;    without specific prior written permission.
;;;
;;; THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
;;; ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;;; ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
;;; FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
;;; DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
;;; OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
;;; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
;;; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
;;; OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
;;; SUCH DAMAGE.
;;;;

;; Japanese EUC
(define ja-rk-rule-basic
  '(
    ((("-"). ())("ー" "ー" "ｰ"))
    (((","). ())("、" "、" "､"))
    ((("."). ())("。" "。" "｡"))
    ((("!"). ())("！" "！" "!"))
    ((("\""). ())("”" "”" "\""))
    ((("#"). ())("＃" "＃" "#"))
    ((("$"). ())("＄" "＄" "$"))
    ((("%"). ())("％" "％" "%"))
    ((("&"). ())("＆" "＆" "&"))
    ((("'"). ())("’" "’" "'"))
    ((("("). ())("（" "（" "("))
    (((")"). ())("）" "）" ")"))
    ((("~"). ())("〜" "〜" "~"))
    ((("="). ())("＝" "＝" "="))
    ((("^"). ())("＾" "＾" "^"))
    ((("\\"). ())("＼" "＼" "\\"))
    ((("|"). ())("｜" "｜" "|"))
    ((("`"). ())("‘" "‘" "`"))
    ((("@"). ())("＠" "＠" "@"))
    ((("{"). ())("｛" "｛" "{"))
    ((("["). ())("「" "「" "｢"))
    ((("+"). ())("＋" "＋" "+"))
    (((";"). ())("；" "；" ";"))
    ((("*"). ())("＊" "＊" "*"))
    (((":"). ())("：" "：" ":"))
    ((("}"). ())("｝" "｝" "}"))
    ((("]"). ())("」" "」" "｣"))
    ((("<"). ())("＜" "＜" "<"))
    (((">"). ())("＞" "＞" ">"))
    ((("?"). ())("？" "？" "?"))
    ((("/"). ())("／" "／" "/"))
    ((("_"). ())("＿" "＿" "_"))

    ((("1"). ())("1" "1" "1"))
    ((("2"). ())("2" "2" "2"))
    ((("3"). ())("3" "3" "3"))
    ((("4"). ())("4" "4" "4"))
    ((("5"). ())("5" "5" "5"))
    ((("6"). ())("6" "6" "6"))
    ((("7"). ())("7" "7" "7"))
    ((("8"). ())("8" "8" "8"))
    ((("9"). ())("9" "9" "9"))
    ((("0"). ())("0" "0" "0"))

    ((("a"). ())("あ" "ア" "ｱ"))
    ((("i"). ())("い" "イ" "ｲ"))
    ((("u"). ())("う" "ウ" "ｳ"))
    ((("e"). ())("え" "エ" "ｴ"))
    ((("o"). ())("お" "オ" "ｵ"))

    ((("x" "a"). ())("ぁ" "ァ" "ｧ"))
    ((("x" "i"). ())("ぃ" "ィ" "ｨ"))
    ((("x" "y" "i"). ())("ぃ" "ィ" "ｨ"))
    ((("x" "u"). ())("ぅ" "ゥ" "ｩ"))
    ((("x" "e"). ())("ぇ" "ェ" "ｪ"))
    ((("x" "y" "e"). ())("ぇ" "ェ" "ｪ"))
    ((("x" "o"). ())("ぉ" "ォ" "ｫ"))

    ((("l" "a"). ())("ぁ" "ァ" "ｧ"))
    ((("l" "i"). ())("ぃ" "ィ" "ｨ"))
    ((("l" "u"). ())("ぅ" "ゥ" "ｩ"))
    ((("l" "e"). ())("ぇ" "ェ" "ｪ"))
    ((("l" "o"). ())("ぉ" "ォ" "ｫ"))

    ((("k" "k"). ("k"))("っ" "ッ" "ｯ"))

    ((("k" "a"). ())("か" "カ" "ｶ"))
    ((("k" "i"). ())("き" "キ" "ｷ"))
    ((("k" "u"). ())("く" "ク" "ｸ"))
    ((("k" "e"). ())("け" "ケ" "ｹ"))
    ((("k" "o"). ())("こ" "コ" "ｺ"))
    ((("k" "y" "a"). ())(("き" "キ" "ｷ") ("ゃ" "ャ" "ｬ")))
    ((("k" "y" "i"). ())(("き" "キ" "ｷ") ("ぃ" "ィ" "ｨ")))
    ((("k" "y" "u"). ())(("き" "キ" "ｷ") ("ゅ" "ュ" "ｭ")))
    ((("k" "y" "e"). ())(("き" "キ" "ｷ") ("ぇ" "ェ" "ｪ")))
    ((("k" "y" "o"). ())(("き" "キ" "ｷ") ("ょ" "ョ" "ｮ")))

    ((("g" "g"). ("g"))("っ" "ッ" "ｯ"))


    ((("g" "a"). ())("が" "ガ" "ｶﾞ"))
    ((("g" "i"). ())("ぎ" "ギ" "ｷﾞ"))
    ((("g" "u"). ())("ぐ" "グ" "ｸﾞ"))
    ((("g" "e"). ())("げ" "ゲ" "ｹﾞ"))
    ((("g" "o"). ())("ご" "ゴ" "ｺﾞ"))

    ((("g" "y" "a"). ())(("ぎ" "ギ" "ｷﾞ") ("ゃ" "ャ" "ｬ")))
    ((("g" "y" "i"). ())(("ぎ" "ギ" "ｷﾞ") ("ぃ" "ィ" "ｨ")))
    ((("g" "y" "u"). ())(("ぎ" "ギ" "ｷﾞ") ("ゅ" "ュ" "ｭ")))
    ((("g" "y" "e"). ())(("ぎ" "ギ" "ｷﾞ") ("ぇ" "ェ" "ｪ")))
    ((("g" "y" "o"). ())(("ぎ" "ギ" "ｷﾞ") ("ょ" "ョ" "ｮ")))

    ((("s" "s"). ("s"))("っ" "ッ" "ｯ"))

    ((("s" "a"). ())("さ" "サ" "ｻ"))
    ((("s" "i"). ())("し" "シ" "ｼ"))
    ((("s" "u"). ())("す" "ス" "ｽ"))
    ((("s" "e"). ())("せ" "セ" "ｾ"))
    ((("s" "o"). ())("そ" "ソ" "ｿ"))

    ((("s" "y" "a"). ())(("し" "シ" "ｼ") ("ゃ" "ャ" "ｬ")))
    ((("s" "y" "i"). ())(("し" "シ" "ｼ") ("ぃ" "ィ" "ｨ")))
    ((("s" "y" "u"). ())(("し" "シ" "ｼ") ("ゅ" "ュ" "ｭ")))
    ((("s" "y" "e"). ())(("し" "シ" "ｼ") ("ぇ" "ェ" "ｪ")))
    ((("s" "y" "o"). ())(("し" "シ" "ｼ") ("ょ" "ョ" "ｮ")))

    ((("z" "z"). ("z"))("っ" "ッ" "ｯ"))

    ((("z" "a"). ())("ざ" "ザ" "ｻﾞ"))
    ((("z" "i"). ())("じ" "ジ" "ｼﾞ"))
    ((("z" "u"). ())("ず" "ズ" "ｽﾞ"))
    ((("z" "e"). ())("ぜ" "ゼ" "ｾﾞ"))
    ((("z" "o"). ())("ぞ" "ゾ" "ｿﾞ"))
    ((("z" "y" "a"). ())(("じ" "ジ" "ｼﾞ") ("ゃ" "ャ" "ｬ")))
    ((("z" "y" "i"). ())(("じ" "ジ" "ｼﾞ") ("ぃ" "ィ" "ｨ")))
    ((("z" "y" "u"). ())(("じ" "ジ" "ｼﾞ") ("ゅ" "ュ" "ｭ")))
    ((("z" "y" "e"). ())(("じ" "ジ" "ｼﾞ") ("ぇ" "ェ" "ｪ")))
    ((("z" "y" "o"). ())(("じ" "ジ" "ｼﾞ") ("ょ" "ョ" "ｮ")))

    ((("j" "j"). ("j"))("っ" "ッ" "ｯ"))

    ((("j" "a"). ())(("じ" "ジ" "ｼﾞ") ("ゃ" "ャ" "ｬ")))
    ((("j" "i"). ())("じ" "ジ" "ｼﾞ"))
    ((("j" "u"). ())(("じ" "ジ" "ｼﾞ") ("ゅ" "ュ" "ｭ")))
    ((("j" "e"). ())(("じ" "ジ" "ｼﾞ") ("ぇ" "ェ" "ｪ")))
    ((("j" "o"). ())(("じ" "ジ" "ｼﾞ") ("ょ" "ョ" "ｮ")))

    ((("j" "y" "a"). ())(("じ" "ジ" "ｼﾞ") ("ゃ" "ャ" "ｬ")))
    ((("j" "y" "i"). ())(("じ" "ジ" "ｼﾞ") ("ぃ" "ィ" "ｨ")))
    ((("j" "y" "u"). ())(("じ" "ジ" "ｼﾞ") ("ゅ" "ュ" "ｭ")))
    ((("j" "y" "e"). ())(("じ" "ジ" "ｼﾞ") ("ぇ" "ェ" "ｪ")))
    ((("j" "y" "o"). ())(("じ" "ジ" "ｼﾞ") ("ょ" "ョ" "ｮ")))

    ((("t" "t"). ("t"))("っ" "ッ" "ｯ"))
    ((("t" "c"). ("c"))("っ" "ッ" "ｯ"))

    ((("t" "a"). ())("た" "タ" "ﾀ"))
    ((("t" "i"). ())("ち" "チ" "ﾁ"))
    ((("t" "u"). ())("つ" "ツ" "ﾂ"))
    ((("t" "e"). ())("て" "テ" "ﾃ"))
    ((("t" "o"). ())("と" "ト" "ﾄ"))

    ((("t" "y" "a"). ())(("ち" "チ" "ﾁ") ("ゃ" "ャ" "ｬ")))
    ((("t" "y" "i"). ())(("ち" "チ" "ﾁ") ("ぃ" "ィ" "ｨ")))
    ((("t" "y" "u"). ())(("ち" "チ" "ﾁ") ("ゅ" "ュ" "ｭ")))
    ((("t" "y" "e"). ())(("ち" "チ" "ﾁ") ("ぇ" "ェ" "ｪ")))
    ((("t" "y" "o"). ())(("ち" "チ" "ﾁ") ("ょ" "ョ" "ｮ")))

    ((("t" "s" "a"). ())(("つ" "ツ" "ﾂ") ("ぁ" "ァ" "ｧ")))
    ((("t" "s" "i"). ())(("つ" "ツ" "ﾂ") ("ぃ" "ィ" "ｨ")))
    ((("t" "s" "u"). ())("つ" "ツ" "ﾂ"))
    ((("t" "s" "e"). ())(("つ" "ツ" "ﾂ") ("ぇ" "ェ" "ｪ")))
    ((("t" "s" "o"). ())(("つ" "ツ" "ﾂ") ("ぉ" "ォ" "ｫ")))

    ((("c" "y" "a"). ())(("ち" "チ" "ﾁ") ("ゃ" "ャ" "ｬ")))
    ((("c" "y" "i"). ())(("ち" "チ" "ﾁ") ("ぃ" "ィ" "ｨ")))
    ((("c" "y" "u"). ())(("ち" "チ" "ﾁ") ("ゅ" "ュ" "ｭ")))
    ((("c" "y" "e"). ())(("ち" "チ" "ﾁ") ("ぇ" "ェ" "ｪ")))
    ((("c" "y" "o"). ())(("ち" "チ" "ﾁ") ("ょ" "ョ" "ｮ")))

    ((("x" "t" "u"). ())("っ" "ッ" "ｯ"))
    ((("x" "t" "s" "u"). ())("っ" "ッ" "ｯ"))
    ((("c" "c"). ("c"))("っ" "ッ" "ｯ"))

    ((("d" "d"). ("d"))("っ" "ッ" "ｯ"))

    ((("d" "a"). ())("だ" "ダ" "ﾀﾞ"))
    ((("d" "i"). ())("ぢ" "ヂ" "ﾁﾞ"))
    ((("d" "u"). ())("づ" "ヅ" "ﾂﾞ"))
    ((("d" "e"). ())("で" "デ" "ﾃﾞ"))
    ((("d" "o"). ())("ど" "ド" "ﾄﾞ"))

    ((("d" "y" "a"). ())(("ぢ" "ヂ" "ﾁﾞ") ("ゃ" "ャ" "ｬ")))
    ((("d" "y" "i"). ())(("ぢ" "ヂ" "ﾁﾞ") ("ぃ" "ィ" "ｨ")))
    ((("d" "y" "u"). ())(("ぢ" "ヂ" "ﾁﾞ") ("ゅ" "ュ" "ｭ")))
    ((("d" "y" "e"). ())(("ぢ" "ヂ" "ﾁﾞ") ("ぇ" "ェ" "ｪ")))
    ((("d" "y" "o"). ())(("ぢ" "ヂ" "ﾁﾞ") ("ょ" "ョ" "ｮ")))

    ((("n" "n"). ())("ん" "ン" "ﾝ"))
    ((("n"). ())("ん" "ン" "ﾝ"))

    ((("n" "a"). ())("な" "ナ" "ﾅ"))
    ((("n" "i"). ())("に" "ニ" "ﾆ"))
    ((("n" "u"). ())("ぬ" "ヌ" "ﾇ"))
    ((("n" "e"). ())("ね" "ネ" "ﾈ"))
    ((("n" "o"). ())("の" "ノ" "ﾉ"))

    ((("n" "y" "a"). ())(("に" "ニ" "ﾆ") ("ゃ" "ャ" "ｬ")))
    ((("n" "y" "i"). ())(("に" "ニ" "ﾆ") ("ぃ" "ィ" "ｨ")))
    ((("n" "y" "u"). ())(("に" "ニ" "ﾆ") ("ゅ" "ュ" "ｭ")))
    ((("n" "y" "e"). ())(("に" "ニ" "ﾆ") ("ぇ" "ェ" "ｪ")))
    ((("n" "y" "o"). ())(("に" "ニ" "ﾆ") ("ょ" "ョ" "ｮ")))

    ((("h" "h"). ("h"))("っ" "ッ" "ｯ"))

    ((("h" "a"). ())("は" "ハ" "ﾊ"))
    ((("h" "i"). ())("ひ" "ヒ" "ﾋ"))
    ((("h" "u"). ())("ふ" "フ" "ﾌ"))
    ((("h" "e"). ())("へ" "ヘ" "ﾍ"))
    ((("h" "o"). ())("ほ" "ホ" "ﾎ"))

    ((("h" "y" "a"). ())(("ひ" "ヒ" "ﾋ") ("ゃ" "ャ" "ｬ")))
    ((("h" "y" "i"). ())(("ひ" "ヒ" "ﾋ") ("ぃ" "ィ" "ｨ")))
    ((("h" "y" "u"). ())(("ひ" "ヒ" "ﾋ") ("ゅ" "ュ" "ｭ")))
    ((("h" "y" "e"). ())(("ひ" "ヒ" "ﾋ") ("ぇ" "ェ" "ｪ")))
    ((("h" "y" "o"). ())(("ひ" "ヒ" "ﾋ") ("ょ" "ョ" "ｮ")))

    ((("f" "f"). ("f"))("っ" "ッ" "ｯ"))

    ((("f" "a"). ())(("ふ" "フ" "ﾌ") ("ぁ" "ァ" "ｧ")))
    ((("f" "i"). ())(("ふ" "フ" "ﾌ") ("ぃ" "ィ" "ｨ")))
    ((("f" "u"). ())("ふ" "フ" "ﾌ"))
    ((("f" "e"). ())(("ふ" "フ" "ﾌ") ("ぇ" "ェ" "ｪ")))
    ((("f" "o"). ())(("ふ" "フ" "ﾌ") ("ぉ" "ォ" "ｫ")))

    ((("f" "y" "a"). ())(("ふ" "フ" "ﾌ") ("ゃ" "ャ" "ｬ")))
    ((("f" "y" "i"). ())(("ふ" "フ" "ﾌ") ("ぃ" "ィ" "ｨ")))
    ((("f" "y" "u"). ())(("ふ" "フ" "ﾌ") ("ゅ" "ュ" "ｭ")))
    ((("f" "y" "e"). ())(("ふ" "フ" "ﾌ") ("ぇ" "ェ" "ｪ")))
    ((("f" "y" "o"). ())(("ふ" "フ" "ﾌ") ("ょ" "ョ" "ｮ")))

    ((("b" "b"). ("b"))("っ" "ッ" "ｯ"))

    ((("b" "a"). ())("ば" "バ" "ﾊﾞ"))
    ((("b" "i"). ())("び" "ビ" "ﾋﾞ"))
    ((("b" "u"). ())("ぶ" "ブ" "ﾌﾞ"))
    ((("b" "e"). ())("べ" "ベ" "ﾍﾞ"))
    ((("b" "o"). ())("ぼ" "ボ" "ﾎﾞ"))

    ((("b" "y" "a"). ())(("び" "ビ" "ﾋﾞ") ("ゃ" "ャ" "ｬ")))
    ((("b" "y" "i"). ())(("び" "ビ" "ﾋﾞ") ("ぃ" "ィ" "ｨ")))
    ((("b" "y" "u"). ())(("び" "ビ" "ﾋﾞ") ("ゅ" "ュ" "ｭ")))
    ((("b" "y" "e"). ())(("び" "ビ" "ﾋﾞ") ("ぇ" "ェ" "ｪ")))
    ((("b" "y" "o"). ())(("び" "ビ" "ﾋﾞ") ("ょ" "ョ" "ｮ")))

    ((("p" "p"). ("p"))("っ" "ッ" "ｯ"))

    ((("p" "a"). ())("ぱ" "パ" "ﾊﾟ"))
    ((("p" "i"). ())("ぴ" "ピ" "ﾋﾟ"))
    ((("p" "u"). ())("ぷ" "プ" "ﾌﾟ"))
    ((("p" "e"). ())("ぺ" "ペ" "ﾍﾟ"))
    ((("p" "o"). ())("ぽ" "ポ" "ﾎﾟ"))

    ((("p" "y" "a"). ())(("ぴ" "ピ" "ﾋﾟ") ("ゃ" "ャ" "ｬ")))
    ((("p" "y" "i"). ())(("ぴ" "ピ" "ﾋﾟ") ("ぃ" "ィ" "ｨ")))
    ((("p" "y" "u"). ())(("ぴ" "ピ" "ﾋﾟ") ("ゅ" "ュ" "ｭ")))
    ((("p" "y" "e"). ())(("ぴ" "ピ" "ﾋﾟ") ("ぇ" "ェ" "ｪ")))
    ((("p" "y" "o"). ())(("ぴ" "ピ" "ﾋﾟ") ("ょ" "ョ" "ｮ")))

    ((("m" "m"). ("m"))("っ" "ッ" "ｯ"))

    ((("m" "b"). ("b"))("ん" "ン" "ﾝ"))
    ((("m" "p"). ("p"))("ん" "ン" "ﾝ"))

    ((("m" "a"). ())("ま" "マ" "ﾏ"))
    ((("m" "i"). ())("み" "ミ" "ﾐ"))
    ((("m" "u"). ())("む" "ム" "ﾑ"))
    ((("m" "e"). ())("め" "メ" "ﾒ"))
    ((("m" "o"). ())("も" "モ" "ﾓ"))

    ((("m" "y" "a"). ())(("み" "ミ" "ﾐ") ("ゃ" "ャ" "ｬ")))
    ((("m" "y" "i"). ())(("み" "ミ" "ﾐ") ("ぃ" "ィ" "ｨ")))
    ((("m" "y" "u"). ())(("み" "ミ" "ﾐ") ("ゅ" "ュ" "ｭ")))
    ((("m" "y" "e"). ())(("み" "ミ" "ﾐ") ("ぇ" "ェ" "ｪ")))
    ((("m" "y" "o"). ())(("み" "ミ" "ﾐ") ("ょ" "ョ" "ｮ")))

    ((("y" "y"). ("y"))("っ" "ッ" "ｯ"))

    ((("y" "a"). ())("や" "ヤ" "ﾔ"))
    ((("y" "u"). ())("ゆ" "ユ" "ﾕ"))
    ((("y" "e"). ())(("い" "イ" "ｲ") ("ぇ" "ェ" "ｪ")))
    ((("y" "o"). ())("よ" "ヨ" "ﾖ"))

    ((("x" "c" "a"). ())("ヵ" "ヵ" "ｶ"))
    ((("x" "k" "a"). ())("ヵ" "ヵ" "ｶ"))
    ((("x" "k" "e"). ())("ヶ" "ヶ" "ｹ"))

    ((("x" "y" "a"). ())("ゃ" "ャ" "ｬ"))
    ((("x" "y" "u"). ())("ゅ" "ュ" "ｭ"))
    ((("x" "y" "o"). ())("ょ" "ョ" "ｮ"))

    ((("r" "r"). ("r"))("っ" "ッ" "ｯ"))

    ((("r" "a"). ())("ら" "ラ" "ﾗ"))
    ((("r" "i"). ())("り" "リ" "ﾘ"))
    ((("r" "u"). ())("る" "ル" "ﾙ"))
    ((("r" "e"). ())("れ" "レ" "ﾚ"))
    ((("r" "o"). ())("ろ" "ロ" "ﾛ"))

    ((("l" "t" "u"). ())("っ" "ッ" "ｯ"))
    ((("l" "t" "s" "u"). ())("っ" "ッ" "ｯ"))

    ((("l" "y" "a"). ())(("り" "リ" "ﾘ") ("ゃ" "ャ" "ｬ")))
    ((("l" "y" "i"). ())(("り" "リ" "ﾘ") ("ぃ" "ィ" "ｨ")))
    ((("l" "y" "u"). ())(("り" "リ" "ﾘ") ("ゅ" "ュ" "ｭ")))
    ((("l" "y" "e"). ())(("り" "リ" "ﾘ") ("ぇ" "ェ" "ｪ")))
    ((("l" "y" "o"). ())(("り" "リ" "ﾘ") ("ょ" "ョ" "ｮ")))

    ((("r" "y" "a"). ())(("り" "リ" "ﾘ") ("ゃ" "ャ" "ｬ")))
    ((("r" "y" "i"). ())(("り" "リ" "ﾘ") ("ぃ" "ィ" "ｨ")))
    ((("r" "y" "u"). ())(("り" "リ" "ﾘ") ("ゅ" "ュ" "ｭ")))
    ((("r" "y" "e"). ())(("り" "リ" "ﾘ") ("ぇ" "ェ" "ｪ")))
    ((("r" "y" "o"). ())(("り" "リ" "ﾘ") ("ょ" "ョ" "ｮ")))

    ((("w" "w"). ("w"))("っ" "ッ" "ｯ"))

    ((("w" "a"). ())("わ" "ワ" "ﾜ"))
    ((("w" "i"). ())(("う" "ウ" "ｳ") ("ぃ" "ィ" "ｨ")))
    ((("w" "u"). ())("う" "ウ" "ｳ"))
    ((("w" "e"). ())(("う" "ウ" "ｳ") ("ぇ" "ェ" "ｪ")))
    ((("w" "o"). ())("を" "ヲ" "ｦ"))
    ((("w" "h" "a"). ())(("う" "ウ" "ｳ") ("ぁ" "ァ" "ｧ")))
    ((("w" "h" "i"). ())(("う" "ウ" "ｳ") ("ぃ" "ィ" "ｨ")))
    ((("w" "h" "u"). ())("う" "ウ" "ｳ"))
    ((("w" "h" "e"). ())(("う" "ウ" "ｳ") ("ぇ" "ェ" "ｪ")))
    ((("w" "h" "o"). ())(("う" "ウ" "ｳ") ("ぉ" "ォ" "ｫ")))

    ((("v" "v"). ("v"))("っ" "ッ" "ｯ"))

    ((("v" "a"). ())(("う゛" "ヴ" "ｳﾞ") ("ぁ" "ァ" "ｧ")))
    ((("v" "i"). ())(("う゛" "ヴ" "ｳﾞ") ("ぃ" "ィ" "ｨ")))
    ((("v" "u"). ())("う゛" "ヴ" "ｳﾞ"))
    ((("v" "e"). ())(("う゛" "ヴ" "ｳﾞ") ("ぇ" "ェ" "ｪ")))
    ((("v" "o"). ())(("う゛" "ヴ" "ｳﾞ") ("ぉ" "ォ" "ｫ")))

    ((("v" "y" "a"). ())(("う゛" "ヴ" "ｳﾞ") ("ゃ" "ャ" "ｬ")))
    ((("v" "y" "u"). ())(("う゛" "ヴ" "ｳﾞ") ("ゅ" "ュ" "ｭ")))
    ((("v" "y" "o"). ())(("う゛" "ヴ" "ｳﾞ") ("ょ" "ョ" "ｮ")))

    ((("z" "k"). ())("↑" "↑" ""))
    ((("z" "j"). ())("↓" "↓" ""))
    ((("z" "h"). ())("←" "←" ""))
    ((("z" "l"). ())("→" "→" ""))
    ((("z" "-"). ())("〜" "〜" ""))
    ((("z" "["). ())("『" "『" ""))
    ((("z" "]"). ())("』" "』" ""))
    ((("z" ","). ())("‥" "‥" ""))
    ((("z" "."). ())("…" "…" ""))
    ((("z" "/"). ())("・" "・" "･"))
    ))

(define ja-rk-rule-additional
  '(
    ((("d" "s" "u"). ())("づ" "ヅ" "ﾂﾞ"))

    ((("d" "h" "a"). ())(("で" "デ" "ﾃﾞ") ("ゃ" "ャ" "ｬ")))
    ((("d" "h" "i"). ())(("で" "デ" "ﾃﾞ") ("ぃ" "ィ" "ｨ")))
    ((("d" "h" "u"). ())(("で" "デ" "ﾃﾞ") ("ゅ" "ュ" "ｭ")))
    ((("d" "h" "e"). ())(("で" "デ" "ﾃﾞ") ("ぇ" "ェ" "ｪ")))
    ((("d" "h" "o"). ())(("で" "デ" "ﾃﾞ") ("ょ" "ョ" "ｮ")))

    ((("d" "w" "a"). ())(("ど" "ド" "ﾄﾞ") ("ぁ" "ァ" "ｧ")))
    ((("d" "w" "i"). ())(("ど" "ド" "ﾄﾞ") ("ぃ" "ィ" "ｨ")))
    ((("d" "w" "u"). ())(("ど" "ド" "ﾄﾞ") ("ぅ" "ゥ" "ｩ")))
    ((("d" "w" "e"). ())(("ど" "ド" "ﾄﾞ") ("ぇ" "ェ" "ｪ")))
    ((("d" "w" "o"). ())(("ど" "ド" "ﾄﾞ") ("ぉ" "ォ" "ｫ")))

    ((("k" "w" "a"). ())(("く" "ク" "ｸ") ("ぁ" "ァ" "ｧ")))
    ((("k" "w" "i"). ())(("く" "ク" "ｸ") ("ぃ" "ィ" "ｨ")))
    ((("k" "w" "u"). ())(("く" "ク" "ｸ") ("ぅ" "ゥ" "ｩ")))
    ((("k" "w" "e"). ())(("く" "ク" "ｸ") ("ぇ" "ェ" "ｪ")))
    ((("k" "w" "o"). ())(("く" "ク" "ｸ") ("ぉ" "ォ" "ｫ")))

    ((("s" "h" "a"). ())(("し" "シ" "ｼ") ("ゃ" "ャ" "ｬ")))
    ((("s" "h" "i"). ())("し" "シ" "ｼ"))
    ((("s" "h" "u"). ())(("し" "シ" "ｼ") ("ゅ" "ュ" "ｭ")))
    ((("s" "h" "e"). ())(("し" "シ" "ｼ") ("ぇ" "ェ" "ｪ")))
    ((("s" "h" "o"). ())(("し" "シ" "ｼ") ("ょ" "ョ" "ｮ")))

    ((("s" "w" "a"). ())(("す" "ス" "ｽ") ("ぁ" "ァ" "ｧ")))
    ((("s" "w" "i"). ())(("す" "ス" "ｽ") ("ぃ" "ィ" "ｨ")))
    ((("s" "w" "u"). ())(("す" "ス" "ｽ") ("ぅ" "ゥ" "ｩ")))
    ((("s" "w" "e"). ())(("す" "ス" "ｽ") ("ぇ" "ェ" "ｪ")))
    ((("s" "w" "o"). ())(("す" "ス" "ｽ") ("ぉ" "ォ" "ｫ")))

    ((("t" "w" "a"). ())(("と" "ト" "ﾄ") ("ぁ" "ァ" "ｧ")))
    ((("t" "w" "i"). ())(("と" "ト" "ﾄ") ("ぃ" "ィ" "ｨ")))
    ((("t" "w" "u"). ())(("と" "ト" "ﾄ") ("ぅ" "ゥ" "ｩ")))
    ((("t" "w" "e"). ())(("と" "ト" "ﾄ") ("ぇ" "ェ" "ｪ")))
    ((("t" "w" "o"). ())(("と" "ト" "ﾄ") ("ぉ" "ォ" "ｫ")))

    ((("t" "h" "a"). ())(("て" "テ" "ﾃ") ("ゃ" "ャ" "ｬ")))
    ((("t" "h" "i"). ())(("て" "テ" "ﾃ") ("ぃ" "ィ" "ｨ")))
    ((("t" "h" "u"). ())(("て" "テ" "ﾃ") ("ゅ" "ュ" "ｭ")))
    ((("t" "h" "e"). ())(("て" "テ" "ﾃ") ("ぇ" "ェ" "ｪ")))
    ((("t" "h" "o"). ())(("て" "テ" "ﾃ") ("ょ" "ョ" "ｮ")))

    ((("h" "w" "a"). ())(("ふ" "フ" "ﾌ") ("ぁ" "ァ" "ｧ")))
    ((("h" "w" "i"). ())(("ふ" "フ" "ﾌ") ("ぃ" "ィ" "ｨ")))
    ((("h" "w" "e"). ())(("ふ" "フ" "ﾌ") ("ぇ" "ェ" "ｪ")))
    ((("h" "w" "o"). ())(("ふ" "フ" "ﾌ") ("ぉ" "ォ" "ｫ")))

    ((("f" "w" "a"). ())(("ふ" "フ" "ﾌ") ("ぁ" "ァ" "ｧ")))
    ((("f" "w" "i"). ())(("ふ" "フ" "ﾌ") ("ぃ" "ィ" "ｨ")))
    ((("f" "w" "u"). ())(("ふ" "フ" "ﾌ") ("ぅ" "ゥ" "ｩ")))
    ((("f" "w" "e"). ())(("ふ" "フ" "ﾌ") ("ぇ" "ェ" "ｪ")))
    ((("f" "w" "o"). ())(("ふ" "フ" "ﾌ") ("ぉ" "ォ" "ｫ")))

    ((("x" "w" "a"). ())("ゎ" "ヮ" "ﾜ"))
    ((("x" "w" "i"). ())("ゐ" "ヰ" "ｨ"))
    ((("x" "w" "e"). ())("ゑ" "ヱ" "ｪ"))

    ((("c" "h" "a"). ())(("ち" "チ" "ﾁ") ("ゃ" "ャ" "ｬ")))
    ((("c" "h" "i"). ())("ち" "チ" "ﾁ"))
    ((("c" "h" "u"). ())(("ち" "チ" "ﾁ") ("ゅ" "ュ" "ｭ")))
    ((("c" "h" "e"). ())(("ち" "チ" "ﾁ") ("ぇ" "ェ" "ｪ")))
    ((("c" "h" "o"). ())(("ち" "チ" "ﾁ") ("ょ" "ョ" "ｮ")))

    ((("q" "w" "a"). ())(("く" "ク" "ｸ") ("ぁ" "ァ" "ｧ")))
    ((("q" "w" "i"). ())(("く" "ク" "ｸ") ("ぃ" "ィ" "ｨ")))
    ((("q" "w" "u"). ())(("く" "ク" "ｸ") ("ぅ" "ゥ" "ｩ")))
    ((("q" "w" "e"). ())(("く" "ク" "ｸ") ("ぇ" "ェ" "ｪ")))
    ((("q" "w" "o"). ())(("く" "ク" "ｸ") ("ぉ" "ォ" "ｫ")))

    ((("q" "y" "a"). ())(("く" "ク" "ｸ") ("ゃ" "ャ" "ｬ")))
    ((("q" "y" "i"). ())(("く" "ク" "ｸ") ("ぃ" "ィ" "ｨ")))
    ((("q" "y" "u"). ())(("く" "ク" "ｸ") ("ゅ" "ュ" "ｭ")))
    ((("q" "y" "e"). ())(("く" "ク" "ｸ") ("ぇ" "ェ" "ｪ")))
    ((("q" "y" "o"). ())(("く" "ク" "ｸ") ("ょ" "ョ" "ｮ")))

    ((("g" "w" "a"). ())(("ぐ" "グ" "ｸﾞ") ("ぁ" "ァ" "ｧ")))
    ((("g" "w" "i"). ())(("ぐ" "グ" "ｸﾞ") ("ぃ" "ィ" "ｨ")))
    ((("g" "w" "u"). ())(("ぐ" "グ" "ｸﾞ") ("ぅ" "ゥ" "ｩ")))
    ((("g" "w" "e"). ())(("ぐ" "グ" "ｸﾞ") ("ぇ" "ェ" "ｪ")))
    ((("g" "w" "o"). ())(("ぐ" "グ" "ｸﾞ") ("ぉ" "ォ" "ｫ")))

    ))

(define ja-rk-rule (append ja-rk-rule-basic ja-rk-rule-additional))

(define ja-wide-rule
  '(("a" "ａ")
    ("b" "ｂ")
    ("c" "ｃ")
    ("d" "ｄ")
    ("e" "ｅ")
    ("f" "ｆ")
    ("g" "ｇ")
    ("h" "ｈ")
    ("i" "ｉ")
    ("j" "ｊ")
    ("k" "ｋ")
    ("l" "ｌ")
    ("m" "ｍ")
    ("n" "ｎ")
    ("o" "ｏ")
    ("p" "ｐ")
    ("q" "ｑ")
    ("r" "ｒ")
    ("s" "ｓ")
    ("t" "ｔ")
    ("u" "ｕ")
    ("v" "ｖ")
    ("w" "ｗ")
    ("x" "ｘ")
    ("y" "ｙ")
    ("z" "ｚ")
    ("A" "Ａ")
    ("B" "Ｂ")
    ("C" "Ｃ")
    ("D" "Ｄ")
    ("E" "Ｅ")
    ("F" "Ｆ")
    ("G" "Ｇ")
    ("H" "Ｈ")
    ("I" "Ｉ")
    ("J" "Ｊ")
    ("K" "Ｋ")
    ("L" "Ｌ")
    ("M" "Ｍ")
    ("N" "Ｎ")
    ("O" "Ｏ")
    ("P" "Ｐ")
    ("Q" "Ｑ")
    ("R" "Ｒ")
    ("S" "Ｓ")
    ("T" "Ｔ")
    ("U" "Ｕ")
    ("V" "Ｖ")
    ("W" "Ｗ")
    ("X" "Ｘ")
    ("Y" "Ｙ")
    ("Z" "Ｚ")

    ("1" "１")
    ("2" "２")
    ("3" "３")
    ("4" "４")
    ("5" "５")
    ("6" "６")
    ("7" "７")
    ("8" "８")
    ("9" "９")
    ("0" "０")

    ("-" "−")
    ("," "，")
    ("." "．")
    ("!" "！")
    ("\"" "”")
    ("#" "＃")
    ("$" "＄")
    ("%" "％")
    ("&" "＆")
    ("'" "’")
    ("(" "（")
    (")" "）")
    ("~" "〜")
    ("=" "＝")
    ("^" "＾")
    ("\\" "＼")
    ("|" "｜")
    ("`" "‘")
    ("@" "＠")
    ("{" "｛")
    ("[" "［")
    ("+" "＋")
    (";" "；")
    ("*" "＊")
    (":" "：")
    ("}" "｝")
    ("]" "］")
    ("<" "＜")
    (">" "＞")
    ("?" "？")
    ("/" "／")
    ("_"  "＿")
    ))

;;
;; 2004-08-30 Takuro Ashie <ashie@homa.ne.jp>
;;
;;   It's a ad-hoc way to detect vowel and consonant in roma string.
;;   FIXME!
;;
(define ja-vowel-table
 '(("a" "a")
   ("i" "i")
   ("u" "u")
   ("e" "e")
   ("o" "o")
    ))

(define ja-consonant-table
 '(("b" "b")
   ("c" "c")
   ("d" "d")
   ("f" "f")
   ("g" "g")
   ("h" "h")
   ("j" "j")
   ("k" "k")
   ("l" "l")
   ("m" "m")
   ("n" "n")
   ("p" "p")
   ("q" "q")
   ("r" "r")
   ("s" "s")
   ("t" "t")
   ("v" "v")
   ("w" "w")
   ("x" "x")
   ("y" "y")
   ("z" "z")
   ))

(define ja-default-small-tsu-roma "xtu")

;; What's intended? The name "ja-direct-rule" makes me confused
;; because it acts in non-direct modes. This rule makes
;; uim-anthy improper as always sending zenkaku-space in
;; hanakaku-kana mode. This seems to be used to "always commit
;; zenkaku-space regardless input mode". If it's true, This rule
;; should be able to be disabled. -- YamaKen
(define ja-direct-rule
  '((" " "　")
    ))

;;
(define ja-find-rec
  (lambda (c rule)
    (if (null? rule)
	#f
	(let ((r (car rule)))
	  (if (string=? c (car r))
	      (cadr r)
	      (ja-find-rec c (cdr rule)))))))

(define ja-wide
  (lambda (c)
    (ja-find-rec c ja-wide-rule)))

(define ja-direct
  (lambda (c)
    (ja-find-rec c ja-direct-rule)))

(define ja-vowel?
  (lambda (c)
    (ja-find-rec c ja-vowel-table)))

(define ja-consonant?
  (lambda (c)
    (ja-find-rec c ja-consonant-table)))

;;
;; 2004-08-30 Takuro Ashie <ashie@homa.ne.jp>
;;
;; ja-string-list-to-wide-alphabet
;;
;;   Convert alphabets in string list to wide alphabets.
;;   This procedure is ad-hoc. Maybe more generalize is needed.
;;
(define ja-string-list-to-wide-alphabet
  (lambda (char-list)
    (if (not (null? char-list))
        (string-append (ja-string-list-to-wide-alphabet (cdr char-list))
                       (ja-wide (car char-list)))
        "")))

;;
;; 2004-08-30 Takuro Ashie <ashie@homa.ne.jp>
;;
;; ja-raw-string-to-valid-roma
;;
;;   Convert a invalid roma consonant to a valid roma consonant
;;   or valid roma string.
;;   Please see the comment of ja-raw-string-list-to-valid-roma
;;   for more detail.
;;
(define ja-raw-string-to-valid-roma
  (lambda (head-str next-str)
    (if (ja-consonant? head-str)
        (if (string=? head-str "n")
            (if (null? next-str)
                head-str
                ;; 2004-09-01 Takuro Ashie <ashie@homa.ne.jp>
                ;;   FIXME!
                ;;   It's a ad-hoc way.
                ;;   Should we check matched record from ja-rk-rule?:
                ;;   (if (hoge-find-rec (string-append head-str next-str))
                (let ((next-head (car (reverse (string-to-list next-str)))))
                 (if (or (ja-vowel? next-str)
                         (string=? "y" next-head)
                         (string=? "n" next-head))
                    "nn"
                    head-str)))
            (if (or (null? next-str) (string=? next-str ""))
                ;ja-default-small-tsu-roma
                head-str
                (if (ja-vowel? next-str)
                    ja-default-small-tsu-roma
                    (car (reverse (string-to-list next-str))))))
        head-str)))

;;
;; 2004-08-30 Takuro Ashie <ashie@homa.ne.jp>
;;
;; ja-raw-string-list-to-valid-roma
;;
;;   This procedure converts a invalid roma string-list to valid one.
;;   "Invalid roma string-list" will be generated while editing a preedit string:
;;
;;     Convert a "n" which is followed by a vowel (or "ya" "yu"...) to "nn":
;;       1. at first, type a following string:
;;          ("ka" "n" "ki")
;;       2: press backspace (or move the cursor):
;;          ("ka" "n")
;;       3. type a vowel:
;;          ("ka" "n" "i")
;;       4. On this case, this procedure converts the list to:
;;          ("ka" "nn" "i")
;;
;;     Fix a broken "っ":
;;       1.  at fisrt, type a following string:
;;             ("a" "t" "ti")
;;       2.  press backspace (or move the cursor):
;;             ("a" "t")
;;       3.  type remaining strings:
;;             ("a" "t" "ka" "nn" "be" "-")
;;      (3'. On this case, this procedure converts the list to:
;;             ("a" "t") -> ("a" "ltu"))
;;       4.  On this case, this procedure converts the list to:
;;             ("a" "k" "ka" "nn" "be" "-")
;; 
(define ja-raw-string-list-to-valid-roma
  (lambda (raw-str-list)
    (let ((head-str (car raw-str-list))
           (next-str (cadr raw-str-list)))
      (if (or (null? next-str) (string=? next-str ""))
          (list (ja-raw-string-to-valid-roma head-str next-str))
          (cons (ja-raw-string-to-valid-roma head-str next-str)
                (ja-raw-string-list-to-valid-roma (cdr raw-str-list)))))))


;;
;; 2004-08-30 Takuro Ashie <ashie@homa.ne.jp>
;;
;;   In the future, these APIs should be marked as "deprecated" because these
;;   APIs breaks original "ja-rk-rule" table, and no longer can use it after
;;   breaks it.
;;
(define using-kana-table? #f)

(define load-kana-table
  (lambda ()
    (require "japanese-kana.scm")
    (set! ja-rk-rule ja-kana-hiragana-rule)
    (set! using-kana-table? #t)
    (define-key anthy-kana-toggle-key? "")
    (define-key anthy-latin-key? generic-on-key?)
    (define-key anthy-wide-latin-key? "")
    ))

(define load-azik-table
  (lambda ()
    (require "japanese-azik.scm")
    (set! ja-rk-rule (append ja-azik-rule ja-rk-rule-basic))
    (define-key skk-prev-candidate-key? 'generic-prev-candidate-key?)
    (define-key skk-kana-toggle-key? "@")
    (define-key skk-kanji-mode-key? "`")
    ))

;;
(require "rk.scm")
